import express from "express";
import fetch from "node-fetch";
import { Buffer } from "buffer";

const app = express();
app.use(express.json());

const GITHUB_TOKEN = process.env.GITHUB_TOKEN; // store safely in env
const OWNER = "YourUser";
const REPO = "YourRepo";
const FILE_PATH = "data/gameData.json";

async function getFile() {
  const url = `https://api.github.com/repos/${OWNER}/${REPO}/contents/${FILE_PATH}`;
  const res = await fetch(url, {
    headers: { Authorization: `token ${GITHUB_TOKEN}` },
  });
  if (!res.ok) throw new Error("Failed to fetch file: " + res.status);
  return await res.json();
}

app.post("/update", async (req, res) => {
  try {
    // Step 1: Read file
    const file = await getFile();
    const sha = file.sha;
    const content = Buffer.from(file.content, "base64").toString("utf-8");
    let data = JSON.parse(content);

    // Step 2: Decrement value
    if (data["HNCTCAR left"] !== undefined) {
      data["HNCTCAR left"] = data["HNCTCAR left"] - 1;
    }

    // Step 3: Commit back to GitHub
    const newContent = Buffer.from(JSON.stringify(data, null, 2)).toString("base64");
    const commitRes = await fetch(
      `https://api.github.com/repos/${OWNER}/${REPO}/contents/${FILE_PATH}`,
      {
        method: "PUT",
        headers: {
          Authorization: `token ${GITHUB_TOKEN}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          message: "Decrement HNCTCAR left",
          content: newContent,
          sha: sha,
        }),
      }
    );

    if (!commitRes.ok) {
      const err = await commitRes.text();
      throw new Error(err);
    }

    res.json({ status: "ok", newValue: data["HNCTCAR left"] });
  } catch (err) {
    res.status(500).send(err.message);
  }
});

app.listen(3000, () => console.log("Server running on port 3000"));
